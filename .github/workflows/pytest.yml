name: PyTest

on: [push]

jobs:
  set_version:
    # If the head commit message contains the string ':tag-as:<TAG>'
    if: contains( github.event.head_commit.message, ":tag-as:")
    runs-on: ubuntu-latest
    env:
      GH_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
    steps: 
      - uses: actions/checkout@v2
      - name: Read version
        run: echo "::set-env name=VERSION::$( echo $GH_COMMIT_MESSAGE | sed -E 's/.*:tag-as:([^ ]+).*/\1/' )"
      - name: Change version
        run: |
          sed -i -E 's/__version__=".+"/__version__="'${VERSION}'"/' src/memoclass/__init__.py
          sed -i -E 's/version=".+"/version="'${VERSION}'"/' setup.py
      - name: Commit changes
        run: |
          git config --global user.name "Jon Burr"
          git config --global user.email "jon.burr.gh@gmail.com"
          git commit -am "Update version number to match tag"
          git push
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
